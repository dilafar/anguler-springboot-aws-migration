{
  "SchemaVersion": 2,
  "CreatedAt": "2025-01-07T23:52:00.9710932Z",
  "ArtifactName": "fadhiljr/nginxapp:employee-frontend-v0.0.36-107",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.20.4"
    },
    "ImageID": "sha256:6d2a3c4166f1dadaa512c21b9faa3e7c94fd6cb39b3433a89dab23deb9a3e18e",
    "DiffIDs": [
      "sha256:b05f8993843ae754439ae0a7c5b6a401fa1eaebb5f1de01140b19c9a3eb37906",
      "sha256:06ae9edd5d0ef15390aa0aa157d76a7dfba0c4456e3ad07870659c95b4afedb2",
      "sha256:7c7ef53509da3ca47e994c2c835a56032e155c7396cc8b3e0ad2d74c8388ae30",
      "sha256:357f9aa58670cdc7cc98c338206d51f69597689f59671e20ad695ddea2465781",
      "sha256:e8f8d2550aa18d7da3c9981bb79aa16943bd2da231ea3bad55b11a2ed97d4a6f",
      "sha256:4372f35fa7964c8b2e0f9c2fb47449e928fb121d92e46850f5d40f7560beb46b",
      "sha256:c60aa223c51fcdfb5a07078944b6777df3e2c6536c1b1184ce12f26c7b6cb7e0",
      "sha256:cb83457b3f98839b261aa012f1d3dfc9de1a0a25b632af74e825de258719dd73",
      "sha256:27ced5ecffcf63d2d79c5afd29e9618f64538b8b8864bbbf1e8245f6f9cc745d"
    ],
    "RepoTags": [
      "fadhiljr/nginxapp:employee-frontend-v0.0.36-107"
    ],
    "RepoDigests": [
      "fadhiljr/nginxapp@sha256:cd838358f0c8e822ebef8e30464b08fcb9c2fba9ad4787a572765343989fc052"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2025-01-07T23:51:46.682552217Z",
      "docker_version": "24.0.7",
      "history": [
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "ADD alpine-minirootfs-3.20.4-x86_64.tar.gz / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "CMD [\"/bin/sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "ENV NGINX_VERSION=1.26.2",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "ENV PKG_RELEASE=1",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "ENV DYNPKG_RELEASE=2",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "RUN /bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 apk add --no-cache --virtual .checksum-deps         openssl     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if echo \"$KEY_SHA512 */tmp/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk add -X \"https://nginx.org/packages/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 curl -f -O https://hg.nginx.org/pkg-oss/archive/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 PKGOSSCHECKSUM=\\\"825f610c44dfb97166112e6d060c0ba209a74f50e42c7c23a5b8742f468596f110bb1b4ca9299547a8a3d41f3a7caa864622f40f6c7bb4d8bab3d24880bdfb6a *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 \u0026\u0026 if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 \u0026\u0026 tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 \u0026\u0026 cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make base                 \u0026\u0026 apk index --allow-untrusted -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del --no-network .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 apk del --no-network .checksum-deps     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -f \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del --no-network .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "COPY docker-entrypoint.sh / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "COPY 10-listen-on-ipv6-by-default.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "COPY 15-local-resolvers.envsh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "COPY 20-envsubst-on-templates.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "COPY 30-tune-worker-processes.sh /docker-entrypoint.d # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "ENTRYPOINT [\"/docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "EXPOSE map[80/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "STOPSIGNAL SIGQUIT",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2024-08-15T00:20:26Z",
          "created_by": "CMD [\"nginx\" \"-g\" \"daemon off;\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-01-07T23:51:46Z",
          "created_by": "/bin/sh -c #(nop) COPY dir:d03ca7302a3cb3e4d58e9e83de56e561cde81e19531d390f7d88bd9fdbd0d1d6 in /usr/share/nginx/html "
        },
        {
          "created": "2025-01-07T23:51:46Z",
          "created_by": "/bin/sh -c #(nop) COPY file:876430474185dcd89cf28caaaaac4af3a0eafa56f1708c840dcd5493818b3ad1 in /etc/nginx/conf.d/default.conf "
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:b05f8993843ae754439ae0a7c5b6a401fa1eaebb5f1de01140b19c9a3eb37906",
          "sha256:06ae9edd5d0ef15390aa0aa157d76a7dfba0c4456e3ad07870659c95b4afedb2",
          "sha256:7c7ef53509da3ca47e994c2c835a56032e155c7396cc8b3e0ad2d74c8388ae30",
          "sha256:357f9aa58670cdc7cc98c338206d51f69597689f59671e20ad695ddea2465781",
          "sha256:e8f8d2550aa18d7da3c9981bb79aa16943bd2da231ea3bad55b11a2ed97d4a6f",
          "sha256:4372f35fa7964c8b2e0f9c2fb47449e928fb121d92e46850f5d40f7560beb46b",
          "sha256:c60aa223c51fcdfb5a07078944b6777df3e2c6536c1b1184ce12f26c7b6cb7e0",
          "sha256:cb83457b3f98839b261aa012f1d3dfc9de1a0a25b632af74e825de258719dd73",
          "sha256:27ced5ecffcf63d2d79c5afd29e9618f64538b8b8864bbbf1e8245f6f9cc745d"
        ]
      },
      "config": {
        "Cmd": [
          "nginx",
          "-g",
          "daemon off;"
        ],
        "Entrypoint": [
          "/docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NGINX_VERSION=1.26.2",
          "PKG_RELEASE=1",
          "DYNPKG_RELEASE=2"
        ],
        "Image": "sha256:79c442baaea6ce9ddc4339ba86b4c24e86e0286652c8539a8c6c6b9f2e53c454",
        "Labels": {
          "maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
        },
        "WorkingDir": "/",
        "StopSignal": "SIGQUIT"
      }
    }
  },
  "Results": [
    {
      "Target": "fadhiljr/nginxapp:employee-frontend-v0.0.36-107 (alpine 3.20.4)",
      "Class": "os-pkgs",
      "Type": "alpine"
    }
  ]
}
